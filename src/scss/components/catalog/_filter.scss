.filter {
  width: 100%;
  max-width: 320px;
  margin-right: auto;
  min-height: 100vh;
  padding: 4rem 1rem 0;
  border: 1px solid var(--color-gray-300);
  border-radius: 0 4px 4px 0;
  z-index: 110;
  background-color: var(--color-white);

  .accordion__content {
    padding-top: 1.2rem;
  }

  &.scroll {
    overflow: hidden auto;
  }

  &__list {
    @include flex-col;

    gap: rem-f(40);
  }

  &__item {
    .form-search {
      margin-bottom: 1.5rem;
      width: 100%;
      max-width: 100%;
      display: flex;
    }
  }

  .filter__btn {
    margin-bottom: 2rem;
    width: 100%;
    max-width: 255px;
  }

  &__icon {
    margin-right: 8px;
    flex-shrink: 0;
    fill: currentcolor;
    width: 1rem;
    height: 1rem;

    &--reverse {
      transform: rotate(180deg);
    }
  }

  &[open] {
    animation: slide-left 800ms forwards;
  }

  &::backdrop {
    background: rgba(30, 33, 44, 0.75);
  }
}

@keyframes slide-left {
  0% {
    transform: translateX(-5%);
  }

  100% {
    transform: translateX(0%);
  }
}

.filter-group {
  &__list {
    @include flex-col;

    padding-left: 5px;
    max-height: 250px;
    gap: 8px;

    &--color {
      display: grid;
      padding-top: 10px;
      grid-template-columns: repeat(4, 1fr);
      gap: 8px;
      place-content: center;

      .color-picker__input {
        width: 24px;
        height: 24px;

        &::before {
          width: 2rem;
          height: 2rem;
        }
      }

      .filter-group__item {
        @include flex-col;
        align-items: center;
        gap: 5px;
        margin: 0;
      }

      // @include for-width (-tablet) {
      //   grid-template-columns: repeat(3, 1fr);
      // }
    }
  }

  &__item {
    @include flex-a-center;
    gap: 8px;
    white-space: nowrap;
    cursor: pointer;

    .custom-checkbox {
      gap: 5px;
    }

    .custom-checkbox__content::before {
      border: 1px solid var(--color-gray-500);
      background-color: var(--color-white);
    }

    .custom-checkbox__field:checked + .custom-checkbox__content {
      color: var(--color-green);

      ~ span {
        color: var(--color-green);
      }

      &::before {
        background-color: var(--color-green);
      }
    }
  }
}
